name: build

on: [push, pull_request]

jobs:
  build:

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      env:
        KEY_MODELLER: ${{ secrets.KEY_MODELLER }}
      run: |
        sudo apt-get -qq update && sudo apt-get install -y swig
        pip install coverage pytest-cov flake8
        export PYTHON=`pip show coverage |grep Location|cut -b11-`
        wget https://salilab.org/modeller/10.6/modeller_10.6-1_amd64.deb
        sudo --preserve-env=KEY_MODELLER dpkg -i modeller_10.6-1_amd64.deb
        modpyver=${{ matrix.python-version }}
        ln -sf /usr/lib/python${modpyver}/dist-packages/_modeller.so ${PYTHON}
        ln -sf /usr/lib/python${modpyver}/dist-packages/modeller ${PYTHON}
        wget https://salilab.org/dssp/dssp-2.0.4-linux-amd64
        sudo mv dssp-2.0.4-linux-amd64 /usr/bin/mkdssp
        sudo chmod a+x /usr/bin/mkdssp
        wget http://www.bioinf.org.uk/software/profit/235216/ProFitV3.1.tar.gz
        tar -xzf ProFitV3.1.tar.gz
        (cd ProFitV3.1/src && make -j2 && sudo cp profit /usr/bin)
    - name: Test
      run: |
        make PYTHON=python
        pytest --cov=. --cov-branch --cov-report=xml -v .
        flake8 . --exclude doc
    - uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
